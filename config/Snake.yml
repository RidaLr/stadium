
environment:
    grid_size: 10        
    initial_length: 4
    goal_reward: 1.
    base_reward: 0.
    collision_penalty: 0
    image_as_state: true # Use image as the state input?
    show_training: False # Render the agent while training

main:
    model: PPO2
    policy: CustomCnnPolicy
    normalize: false
    n_workers: 4             # Parallel environment count
    n_steps: 2000000         # Steps to train
    save_every: 2000         # Save a checkpoint of the model every n steps
    logs:
        - steps
        - goals_reached

PPO2:
    gamma: 0.98          # Discount factor for future rewards
    n_steps: 256         # Batch size (n_steps * n_workers)
    ent_coef: 0.01       # Entropy loss coefficient 
    learning_rate: 0.005 # LR
    vf_coef: 0.5         # The contribution of value function loss to the total loss
    max_grad_norm: 0.5   # Max range of the gradient clipping
    lam: 0.95            # Generalized advantage estimation (variance/bias tradeoff)
    nminibatches: 4      # Number of minibatches for SGD/Adam updates
    noptepochs: 4        # Number of iterations for SGD/Adam
    cliprange: 0.2       # Clip factor for PPO 
    full_tensorboard_log: false
    verbose: 2

CustomMlpPolicy:
    shared:
        - 64
        - 64
    h_actor: # Policy head
        - 8
    h_critic: # Value head
        - 8

CustomCnnPolicy:
    filters:
        - 64
        - 32
        - 16
    kernel_size:
        - 3
        - 3
        - 3
    stride:
        - 1
        - 1
        - 1
    shared:      # Number of nodes in the layers of the shared part of the fully connected network
        - 64
        - 64
    h_actor: []  # Number of nodes per layer in the actor part of the network
    h_critic: [] # Number of nodes per layer in the critic part of the network

    activ: relu
    pd_init_scale: 0.05
    conv_init_scale: 1.4
    kernel_initializer: glorot_normal_initializer
    init_bias: .5


# MODELS:
# -----
# For discrete action space environments:
#     PPO2, DQN, ACER, A2C, ACKTR
# For continuous action space environments:
#     PPO2, A2C
# POLICIES:
# ---------
#     Configurable:
#         CustomCnnPolicy - CNN feature extraction
#         CustomLSTMPolicy - LSTM cells followed by a multilayer perceptron
#         CustomMlpPolicy - Multilayer perceptron
#         CustomDQNPolicy - Multilayer perceptron specifically for DQN
#     Defaults:
#         CnnPolicy - CNN as descr<Kibed in 2014 Atari paper
#         MlpPolicy - simple MLP with two hidden layers of size 64

# Arguments that get passed to the constructor of your class instance
# as config={} keyword